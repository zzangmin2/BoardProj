{"ast":null,"code":"var _jsxFileName = \"/Users/kimjungmin/Documents/ js react /BoardProj/src/components/PostEditor.js\",\n  _s = $RefreshSig$();\nimport { useContext, useState, useEffect } from \"react\";\nimport MyButton from \"./MyButton\";\nimport { PostDispatchContext } from \"../App\";\nimport { getStringDate } from \"../util/date\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostEditor = ({\n  isEdit,\n  originData\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [date, setDate] = useState(new Date().getTime());\n  const {\n    onCreate,\n    onEdit\n  } = useContext(PostDispatchContext);\n  const handleSubmit = () => {\n    if (isEdit) {\n      console.log(originData.dataId);\n      onEdit(originData.dataId, \"글쓰니\", title, content, date);\n      navigate(-1);\n    } else {\n      onCreate(\"글쓰니\", title, content, date);\n      alert(\"성공!\");\n      navigate(-1);\n    }\n  };\n  useEffect(() => {\n    if (isEdit && originData) {\n      setDate(getStringDate(new Date()));\n      setTitle(originData.postTitle);\n      setContent(originData.postBody);\n    }\n  }, [isEdit, originData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PostEditor\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text_editor\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date_created\",\n        children: getStringDate(new Date())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"title_input\",\n        placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        value: title || \"\",\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"content_input\",\n        placeholder: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        value: content || \"\",\n        onChange: e => setContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n      text: \"\\uB4F1\\uB85D\\uD558\\uAE30\",\n      type: \"default\",\n      onClick: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(PostEditor, \"CLkY1fE1mUd4mjeBlkTWicLIl/Y=\", false, function () {\n  return [useNavigate];\n});\n_c = PostEditor;\nexport default PostEditor;\nvar _c;\n$RefreshReg$(_c, \"PostEditor\");","map":{"version":3,"names":["useContext","useState","useEffect","MyButton","PostDispatchContext","getStringDate","useNavigate","jsxDEV","_jsxDEV","PostEditor","isEdit","originData","_s","navigate","title","setTitle","content","setContent","date","setDate","Date","getTime","onCreate","onEdit","handleSubmit","console","log","dataId","alert","postTitle","postBody","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","text","onClick","_c","$RefreshReg$"],"sources":["/Users/kimjungmin/Documents/ js react /BoardProj/src/components/PostEditor.js"],"sourcesContent":["import { useContext, useState, useEffect } from \"react\";\nimport MyButton from \"./MyButton\";\nimport { PostDispatchContext } from \"../App\";\nimport { getStringDate } from \"../util/date\";\n\nimport { useNavigate } from \"react-router-dom\";\n\nconst PostEditor = ({ isEdit, originData }) => {\n  const navigate = useNavigate();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [date, setDate] = useState(new Date().getTime());\n\n  const { onCreate, onEdit } = useContext(PostDispatchContext);\n\n  const handleSubmit = () => {\n    if (isEdit) {\n      console.log(originData.dataId);\n      onEdit(originData.dataId, \"글쓰니\", title, content, date);\n      navigate(-1);\n    } else {\n      onCreate(\"글쓰니\", title, content, date);\n      alert(\"성공!\");\n      navigate(-1);\n    }\n  };\n\n  useEffect(() => {\n    if (isEdit && originData) {\n      setDate(getStringDate(new Date()));\n      setTitle(originData.postTitle);\n      setContent(originData.postBody);\n    }\n  }, [isEdit, originData]);\n\n  return (\n    <div className=\"PostEditor\">\n      <div className=\"text_editor\">\n        <div className=\"date_created\">{getStringDate(new Date())}</div>\n        <input\n          type=\"text\"\n          className=\"title_input\"\n          placeholder=\"제목을 입력하세요\"\n          value={title || \"\"}\n          onChange={(e) => setTitle(e.target.value)}\n        ></input>\n        <textarea\n          className=\"content_input\"\n          placeholder=\"내용을 입력하세요\"\n          value={content || \"\"}\n          onChange={(e) => setContent(e.target.value)}\n        ></textarea>\n      </div>\n      <MyButton text=\"등록하기\" type=\"default\" onClick={handleSubmit} />\n    </div>\n  );\n};\n\nexport default PostEditor;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}